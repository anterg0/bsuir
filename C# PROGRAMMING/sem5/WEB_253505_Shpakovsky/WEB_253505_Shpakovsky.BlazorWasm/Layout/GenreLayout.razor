@inject IDataService DataService
@implements IDisposable

<div class="dropdown">
    <button class="btn btn-secondary dropdown-toggle" type="button" id="categoryDropdown" data-bs-toggle="dropdown" aria-expanded="false">
        @DataService.SelectedCategory?.Name
    </button>
    <ul class="dropdown-menu" aria-labelledby="categoryDropdown">
        <li><a class="dropdown-item" href="javascript:void(0);" @onclick="() => OnCategorySelected(null)">Все категории</a></li>
        @foreach (var category in DataService.Genres)
        {
            <li><a class="dropdown-item" href="javascript:void(0);" @onclick="() => OnCategorySelected(category)">@category.Name</a></li>
        }
    </ul>
</div>

@code {
    protected override async Task OnInitializedAsync()
    {
        DataService.DataLoaded += StateHasChanged;
        await DataService.GetCategoryListAsync();
    }
    private async Task OnCategorySelected(Genre category)
    {
        DataService.SelectedCategory = category;
        await DataService.GetProductListAsync();
    }
    public void Dispose()
    {
        DataService.DataLoaded -= StateHasChanged;
    }
}